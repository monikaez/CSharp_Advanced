
Queue<int> tools = new Queue<int>(Console.ReadLine()
    .Split(" ", StringSplitOptions.RemoveEmptyEntries)
    .Select(int.Parse)
    .ToArray());

Stack<int> substances = new Stack<int>(Console.ReadLine()
    .Split(" ", StringSplitOptions.RemoveEmptyEntries)
    .Select(int.Parse)
    .ToArray());


List<int> challenges =new( Console.ReadLine()
    .Split(" ", StringSplitOptions.RemoveEmptyEntries)
    .Select(int.Parse)
    .ToList());



while (tools.Any() && substances.Any() && challenges.Any())
{
    
    int tool = tools.Dequeue();
    int substance = substances.Pop();
     int result = tool * substance;


    if (challenges.Contains(result))
    {
        challenges.Remove(result);
    }
    else
    {
        tool++;
        tools.Enqueue(tool);

        substance--;

        if (substance > 0)
        {
            substances.Push(substance);
        }
    }

}

if (challenges.Count == 0)
{
    Console.WriteLine("Harry found an ostracon, which is dated to the 6th century BCE.");
}
else
{
    Console.WriteLine("Harry is lost in the temple. Oblivion awaits him."); 
}

if (tools.Any())
{
    Console.WriteLine($"Tools: {string.Join(", ", tools)} ");
}

if (substances.Any())
{
    Console.WriteLine($"Substances: {string.Join(", ", substances)} ");
}

if (challenges.Any())
{
    Console.WriteLine($"Challenges: {string.Join(", ", challenges)} ");
    
}



